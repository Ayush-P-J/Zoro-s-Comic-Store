<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Sales Report - Zoro's Comic Store</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: "Inter", sans-serif;
        background-color: #1e2124;
        color: #f1f1f1;
      }

      .card {
        background-color: #2f3136;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }
    </style>

    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <title>Corona Admin</title>
    <!-- plugins:css -->
    <link
      rel="stylesheet"
      href="/assets/vendors/mdi/css/materialdesignicons.min.css"
    />
    <link rel="stylesheet" href="/assets/vendors/css/vendor.bundle.base.css" />
    <!-- endinject -->
    <!-- Plugin css for this page -->
    <link
      rel="stylesheet"
      href="/assets/vendors/jvectormap/jquery-jvectormap.css"
    />
    <link
      rel="stylesheet"
      href="/assets/vendors/flag-icon-css/css/flag-icon.min.css"
    />
    <link
      rel="stylesheet"
      href="/assets/vendors/owl-carousel-2/owl.carousel.min.css"
    />
    <link
      rel="stylesheet"
      href="/assets/vendors/owl-carousel-2/owl.theme.default.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css
  
  
  
    "
    />

    <!-- Cropper.js CSS -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
      rel="stylesheet"
    />
    <!-- Cropper.js JS -->

    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <!-- endinject -->
    <!-- Layout styles -->
    <link rel="stylesheet" href="/assets/css/style.css" />
    <!-- End layout styles -->
    <link rel="shortcut icon" href="/assets/images/favicon.png" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.17/dist/sweetalert2.min.css"
    />

    <style>
      .product-name-cell {
        max-width: 200px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    </style>
  </head>

  <body>
    <div class="container-scroller">
      <!-- partial:partials/_sidebar.html -->
      <%- include("../partials/admin/sidebar") %>

      <!-- partial -->
      <%- include("../partials/admin/navbar") %>

      <!-- partial -->
      <div class="main-panel mt-5">
        <div class="container mx-auto px-4 py-8">
          <div class="card">
            <div class="bg-blue-600 text-white p-6 rounded-t-lg">
              <h1 class="text-2xl font-bold">Sales Report</h1>
            </div>

            <div class="p-6 bg-gray-800">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <label class="block text-sm font-medium text-gray-400 mb-2">Report Type</label>
                    <select id="report-type" class="w-full p-2 bg-gray-700 border-gray-600 rounded-md text-gray-300">
                      <option value="Daily" <%= type === 'Daily' ? 'selected' : '' %>>Daily</option>
    <option value="Weekly" <%= type === 'Weekly' ? 'selected' : '' %>>Weekly</option>
    <option value="Monthly" <%= type === 'Monthly' ? 'selected' : '' %>>Monthly</option>
    <option value="Yearly" <%= type === 'Yearly' ? 'selected' : '' %>> Yearly</option>
    <option value="Custom" <%= type === 'Custom' ? 'selected' : '' %>> Custom Date Range</option>
                    </select>
                  </div>
              
                  <div>
                    <label class="block text-sm font-medium text-gray-400 mb-2">Start Date</label>
                    <input type="date" id="start-date" value="<%= startDate %>" disabled  class="w-full p-2 bg-gray-700 border-gray-600 rounded-md text-gray-300 dates" />
                  </div>
                  <div>
                    <label class="block text-sm font-medium text-gray-400 mb-2">End Date</label>
                    <input type="date" value="<%= endDate %>"  id="end-date" disabled class="w-full p-2 bg-gray-700 border-gray-600 rounded-md text-gray-300 dates" />
                  </div>
                </div>
              
                <div class="mt-4 flex space-x-2">
                  <button id="generate-report" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                    Generate Report
                  </button>
                  <button id="download-pdf" onclick="pdf()" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
                    Download PDF
                  </button>
                  <button id="download-excel" onclick="downloadExcel()" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
                    Download Excel
                  </button>
                  <a href="/admin/salesReport/download?startDate=2020-01-01&endDate=2050-01-31" class="btn btn-primary">
                    Download over all Sales Report
                  </a>
                  
                </div>
              </div>

            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 p-6">
              <div class="bg-blue-900 p-4 rounded-lg">
                <h3 class="text-sm text-gray-400">Total Sales</h3>
                <% const totalSales = orders.reduce((acc, curr) => {
                    return curr.status === 'Delivered' || curr.paymentStatus == "Success" && curr.status !== "Returned" ? acc + curr.totalAmount : acc;
                  }, 0); %>
                <p class="text-2xl font-bold text-blue-300">&#8377;<%= totalSales %></p>
              </div>
              <% const totalOrders = orders.reduce((acc, curr) => {
                return curr.status !== 'Cancelled' ? acc + 1 : acc;
              }, 0); %>
              
              <div class="bg-green-900 p-4 rounded-lg">
                <h3 class="text-sm text-gray-400">Total Orders</h3>
                <p class="text-2xl font-bold text-green-300"><%= totalOrders %></p>
              </div>
              <!-- <div class="bg-red-900 p-4 rounded-lg">
                <h3 class="text-sm text-gray-400">Total Discounts</h3>
                <p class="text-2xl font-bold text-red-300">$2,345.67</p>
              </div>
              <div class="bg-purple-900 p-4 rounded-lg">
                <h3 class="text-sm text-gray-400">Coupon Deductions</h3>
                <p class="text-2xl font-bold text-purple-300">$1,234.56</p>
              </div> -->
            </div>

            <div class="p-6">
              <h2 class="text-xl font-semibold mb-4" id="sales-report-container">Detailed Sales Report</h2>
              <div class="overflow-x-auto">
                <table class="w-full text-left border border-gray-700">
                  
                  <thead class="bg--50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
                        <!-- <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Products</th> -->
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                        <!-- <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Discount</th> -->
                        <!-- <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Final Amount</th> -->
                        <tbody class="bg-gray-dark divide-y divide-gray-200">
                            <% orders.forEach((sale,index)=>{ %>
                              <% if(sale.status === 'Delivered' || sale.paymentStatus == "Success" && sale.status !== "Returned"){ %>

                                <tr class="table-row" style="animation: fadeIn 0.5s ease-out forwards; animation-delay: 0.1s">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-white-900"><%= sale.orderId %></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-white-500"><%= sale.createdAt %></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-white-900"><%= sale.userId.fullName %></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-white-900"><%= sale.totalAmount %></td>
                                    <!-- <td class="px-6 py-4 text-sm text-gray-500">
                                        <div class="text-sm text-gray-900"><%= sale.products[0] %></div>
                                        <% if (sale.products.length > 1) { %>
                                            <div class="text-xs text-gray-500">+ <%= sale.products.length - 1 %> more products</div>
                                        <% } %> 
                                    </td> -->
                                    
                                </tr>
                              <% } %>
                            <% }) %>
                        </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- page-body-wrapper ends -->
    </div>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
          const reportType = document.getElementById("report-type");
          const startDate = document.getElementById("start-date");
          const endDate = document.getElementById("end-date");
          const generateReport = document.getElementById("generate-report");
          const downloadPdf = document.getElementById("download-pdf");
          const downloadExcel = document.getElementById("download-excel");
          const reportTableBody = document.getElementById("sales-report-table-body"); // Target tbody

          const reportContainer = document.getElementById("sales-report-container"); // Container for sales report data
      
          // Helper function to format date as YYYY-MM-DD
          function formatDate(date) {
            return date.toISOString().split("T")[0];
          }
      
          // Show toast notification
          function showToast(message, type = "success") {
            const toast = document.createElement("div");
            toast.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-lg transform transition-all duration-300 ease-in-out z-50 ${
              type === "success" ? "bg-green-500 text-white" : "bg-red-500 text-white"
            }`;
            toast.style.opacity = "0";
            toast.style.transform = "translateY(-20px)";
            toast.innerHTML = `<div class="flex items-center space-x-2">
                <span class="text-lg font-bold">${type === "success" ? "✓" : "⚠️"}</span>
                <p class="font-medium">${message}</p>
              </div>`;
            document.body.appendChild(toast);
      
            setTimeout(() => {
              toast.style.opacity = "1";
              toast.style.transform = "translateY(0)";
            }, 10);
      
            setTimeout(() => {
              toast.style.opacity = "0";
              toast.style.transform = "translateY(-20px)";
              setTimeout(() => {
                document.body.removeChild(toast);
              }, 300);
            }, 3000);
          }
      
          // Fetch and update sales report dynamically
          async function fetchAndUpdateReport(type, dates = {}) {
            try {
              const params = new URLSearchParams();
              params.append("type", type);
              params.append("axios", true);
              params.append("startDate", startDate.value);
              params.append("endDate", endDate.value);
              window.location.href = `/admin/salesReport?${params.toString()}`
      
            //   const response = await axios.get(`/admin/salesReport?${params.toString()}`);

              // Update report container with new data
            //   alert(orders)
            //   reportContainer.innerHTML = orders;
              
              showToast("Sales report updated successfully");
            } catch (error) {
              console.error("Error updating sales report:", error);
              showToast("Error updating sales report", "error");
            }
          }
      
          // Handle report type changes
          reportType.addEventListener("change", function () {
            const type = reportType.value;
            setDefaultDates(type);
            if (type == "Custom") {
              startDate.disabled = false
              endDate.disabled = false
              
            }
            if (type !== "Custom") {
              generateReport.addEventListener("click", function () {
                
                fetchAndUpdateReport(type);
              })

            }
          });
      
          // Handle custom report generation
          generateReport.addEventListener("click", function () {
            if (startDate.value && endDate.value) {
              fetchAndUpdateReport("custom", {
                startDate: startDate.value,
                endDate: endDate.value,
              });
            } else {
              showToast("Please select both start and end dates", "error");
            }
          });
      
          // Initialize default dates
          function setDefaultDates(type) {
    const today = new Date();
    const lastWeek = new Date(today);
    const now = new Date(today);
    lastWeek.setDate(today.getDate() - 7);
    now.setDate(today.getDate() + 1);

    if (type === "Daily") {
        startDate.value = formatDate(today);
        endDate.value = formatDate(now);  // Fix: Use today directly
    } else if (type === "Weekly") {
        startDate.value = formatDate(lastWeek);
        endDate.value = formatDate(today);
    } else if (type === "Monthly") {
        const firstOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
        startDate.value = formatDate(firstOfMonth);
        endDate.value = formatDate(today);
    } else if (type === "Yearly") {
        const firstOfYear = new Date(today.getFullYear(), 0, 1); // Jan 1 of the current year
        startDate.value = formatDate(firstOfYear);
        endDate.value = formatDate(today);
    } else {
        startDate.value = "";
        endDate.value = "";
    }
}

// Utility function to format a date to 'YYYY-MM-DD'
function formatDate(date) {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based
    const day = String(date.getDate()).padStart(2, '0');
    return `${year}-${month}-${day}`;
}
      
          // Set initial default state
          setDefaultDates(reportType.value);
        });

        const startDate = document.getElementById('start-date').value;
        const endDate = document.getElementById('end-date').value;
        function downloadExcel(){
            // alert(startDate+" "+endDate )
            window.location.href = `/admin/salesReport/download/excel?startDate=${startDate}&endDate=${endDate}`



        }


        async function pdf() {
          try {
    alert("pdf")
    // Define your API endpoint with query parameters (e.g., date filters)
    const apiUrl = `/admin/salesReport/download/pdf?startDate=${startDate}&endDate=${endDate}`;
    alert("pdf1")

    // Fetch the PDF
    const response = await fetch(apiUrl, {
      method: "GET",
      headers: {
        "Content-Type": "application/pdf",
      },
    });

    if (!response.ok) {
      throw new Error("Failed to download the report");
    }

    // Convert the response into a Blob
    const blob = await response.blob();

    // Create a link element
    const downloadLink = document.createElement("a");
    downloadLink.href = window.URL.createObjectURL(blob);
    downloadLink.download = `Sales_Report_${new Date().toISOString()}.pdf`;

    // Trigger the download
    downloadLink.click();

    // Clean up
    window.URL.revokeObjectURL(downloadLink.href);
  } catch (error) {
    console.error("Error downloading the sales report:", error);
    alert("Failed to download the report. Please try again.");
  }
};

      </script>
      
      
      <script src="/assets/vendors/js/vendor.bundle.base.js"></script>
      <!-- endinject -->
      <!-- Plugin js for this page -->
      <script src="/assets/vendors/chart.js/Chart.min.js"></script>
      <script src="/assets/vendors/progressbar.js/progressbar.min.js"></script>
      <script src="/assets/vendors/jvectormap/jquery-jvectormap.min.js"></script>
      <script src="/assets/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
      <script src="/assets/vendors/owl-carousel-2/owl.carousel.min.js"></script>
      <!-- End plugin js for this page -->
      <!-- inject:js -->
      <script src="/assets/js/off-canvas.js"></script>
      <script src="/assets/js/hoverable-collapse.js"></script>
      <script src="/assets/js/misc.js"></script>
      <script src="/assets/js/settings.js"></script>
      <script src="/assets/js/todolist.js"></script>
      <!-- endinject -->
      <!-- Custom js for this page -->
      <script src="/assets/js/dashboard.js"></script>
      <!-- End custom js for this page -->
    </body>
    
    </html>