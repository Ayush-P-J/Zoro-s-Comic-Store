<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Corona Admin</title>
  <!-- plugins:css -->
  <link rel="stylesheet" href="/assets/vendors/mdi/css/materialdesignicons.min.css">
  <link rel="stylesheet" href="/assets/vendors/css/vendor.bundle.base.css">
  <!-- endinject -->
  <!-- Plugin css for this page -->
  <link rel="stylesheet" href="/assets/vendors/jvectormap/jquery-jvectormap.css">
  <link rel="stylesheet" href="/assets/vendors/flag-icon-css/css/flag-icon.min.css">
  <link rel="stylesheet" href="/assets/vendors/owl-carousel-2/owl.carousel.min.css">
  <link rel="stylesheet" href="/assets/vendors/owl-carousel-2/owl.theme.default.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css



  ">
  <!-- End plugin css for this page -->
  <!-- inject:css -->
  <!-- endinject -->
  <!-- Layout styles -->
   <!-- Cropper.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<!-- Cropper.js JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


  <style>
    img {
      max-width: 100%;
    }
    #preview {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
    }
    .preview-image {
      width: 150px;
      height: 150px;
      overflow: hidden;
    }
  </style>
  <link rel="stylesheet" href="/assets/css/style.css">
  <!-- End layout styles -->
  <link rel="shortcut icon" href="/assets/images/favicon.png" />
</head>

<body>
  <div class="container-scroller">
    <!-- partial:partials/_sidebar.html -->
    
        <!-- partial -->
        <div class="main-panel">
        
          <center><h1>Edit Product</h1></center>

          <div class="row add-category" id="addCategory">
            <div class="col-12 grid-margin stretch-card ">
              <div class="card">
                <div class="card-body">
                  <h4 class="card-title">
                    <%= error %>
                  </h4>
              

                  <form class="forms-sample" enctype="multipart/form-data" action="/admin/products/edit/<%= product._id %>" method="post" id="editProductForm">
                    <!-- Product Name -->
                    <div class="form-group">
                        <label for="productName">Product Name</label>
                        <input type="text" class="form-control" value="<%= product.productName %>" name="productName" id="productName" placeholder="Enter product name" required>
                    </div>
                
                    <!-- Description -->
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" name="description" id="description" rows="3" placeholder="Enter product description" required><%= product.description %></textarea>
                    </div>
                
                    <!-- Stock -->
                    <div class="form-group">
                        <label for="stock">Stock</label>
                        <input type="number" class="form-control" value="<%= product.stock %>" name="stock" id="stock" placeholder="Enter stock quantity" required>
                    </div>
                
                    <!-- Category -->
                    <div class="form-group">
                        <label for="category">Category</label>
                        <select class="form-control" name="category" id="category" required>
                            <% categories.forEach((category)=> { %>
                                <% if (category.status === true) { %>
                                    <option value="<%= category._id %>" <%= category._id === product.category ? "selected" : "" %>>
                                        <%= category.categoryName %>
                                    </option>
                                <% } %>
                            <% }); %>
                        </select>
                    </div>
                
                    <!-- Size -->
                    <div class="form-group">
                        <label for="size">Size</label>
                        <input type="text" class="form-control" value="<%= product.size %>" name="size" id="size" placeholder="Enter product size">
                    </div>
                
                    <!-- Regular Price -->
                    <div class="form-group">
                        <label for="regularPrice">Regular Price</label>
                        <input type="number" class="form-control" value="<%= product.regularPrice %>" name="regularPrice" id="regularPrice" placeholder="Enter regular price" required>
                    </div>
                
                    <!-- Sale Price -->
                    <div class="form-group">
                        <label for="salePrice">Sale Price</label>
                        <input type="number" class="form-control" value="<%= product.salePrice %>" name="salePrice" id="salePrice" placeholder="Enter sale price">
                    </div>
                
                    <!-- Status -->
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select class="form-control" name="status" id="status" required>
                            <option value="Available" <%= product.status === "Available" ? "selected" : "" %>>Available</option>
                            <option value="Out of Stock" <%= product.status === "Out of Stock" ? "selected" : "" %>>Out of Stock</option>
                        </select>
                    </div>
                
                    <!-- Review -->
                    <div class="form-group">
                        <label for="review">Review</label>
                        <textarea class="form-control" name="review" id="review" rows="2" placeholder="Enter review"><%= product.review %></textarea>
                    </div>
                    
                    <div class="image-upload-container">
                      <!-- Image Upload Card 1 -->
                      <div class="upload-card">
                        <div class="preview-image" id="preview-image1">
                          <img id="imgView1" src="/images/<%= product.images[0] %>" alt="Preview 1">
                        </div>
                        <input class="form-control mt-2" type="file" name="images" id="input1" value="<%= product.images[0] %>"
                               accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                        <div id="images-error1" class="error-message text-danger mt-1"></div>
                    
                        <!-- Hidden Cropper Section -->
                        <div id="preview1" class="image-cropper mt-3 d-none">
                          <img id="croppedImg1" alt="Cropped Preview 1">
                          <button type="button" id="saveButton1" class="btn btn-primary btn-sm">Save</button>
                          <button type="button" id="cancelButton1" class="btn btn-secondary btn-sm">Cancel</button>
                        </div>
                      </div>
                    
                      <!-- Image Upload Card 2 -->
                      <div class="upload-card">
                        <div class="preview-image" id="preview-image2">
                          <img id="imgView2" src="/images/<%= product.images[1] %>" alt="Preview 2">
                        </div>
                        <input class="form-control mt-2" type="file" name="images" id="input2" value="<%= product.images[1] %>"
                               accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                        <div id="images-error2" class="error-message text-danger mt-1"></div>
                    
                        <div id="preview2" class="image-cropper mt-3 d-none">
                          <img id="croppedImg2" alt="Cropped Preview 2">
                          <button type="button" id="saveButton2" class="btn btn-primary btn-sm">Save</button>
                          <button type="button" id="cancelButton2" class="btn btn-secondary btn-sm">Cancel</button>
                        </div>
                      </div>
                    
                      <!-- Image Upload Card 3 -->
                      <div class="upload-card">
                        <div class="preview-image" id="preview-image3">
                          <img id="imgView3" src="/images/<%= product.images[2] %>" alt="Preview 3">
                        </div>
                        <input class="form-control mt-2"  name="images" id="input3" value="<%= product.images[2] %>"
                               accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                        <div id="images-error3" class="error-message text-danger mt-1"></div>
                    
                        <div id="preview3" class="image-cropper mt-3 d-none">
                          <img id="croppedImg3" alt="Cropped Preview 3">
                          <button type="button" id="saveButton3" class="btn btn-primary btn-sm">Save</button>
                          <button type="button" id="cancelButton3" class="btn btn-secondary btn-sm">Cancel</button>
                        </div>
                      </div>
                    </div>
                  
                      <!-- Images Upload -->

                      
                    
                 
                  
  
                  </div>
              </div>
            </div>
          </div>

                    
                    
                    

                    
                    <!-- Submit and Cancel -->
                    <button type="submit" class="btn btn-primary mr-2">Submit</button>
                    <button type="reset" class="btn btn-dark">Cancel</button>
                  </form>
                  <!-- Row for Image Sections -->

                  



        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
</div>
<!-- container-scroller -->
<!-- plugins:js -->



<script src="/assets/vendors/js/vendor.bundle.base.js"></script>
<!-- endinject -->
<!-- Plugin js for this page -->
<script src="/assets/vendors/chart.js/Chart.min.js"></script>
<script src="/assets/vendors/progressbar.js/progressbar.min.js"></script>
<script src="/assets/vendors/jvectormap/jquery-jvectormap.min.js"></script>
<script src="/assets/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
<script src="/assets/vendors/owl-carousel-2/owl.carousel.min.js"></script>
<!-- End plugin js for this page -->
<!-- inject:js -->
<script src="/assets/js/off-canvas.js"></script>
<script src="/assets/js/hoverable-collapse.js"></script>
<script src="/assets/js/misc.js"></script>
<script src="/assets/js/settings.js"></script>
<script src="/assets/js/todolist.js"></script>
<!-- endinject -->
<!-- Custom js for this page -->
<script src="/assets/js/dashboard.js"></script>

<script>
//   let cropper;

// function viewImage(event, index) {
//   let input = event.target;
//   let reader = new FileReader();

//   reader.onload = function () {
//     let dataURL = reader.result;
//     let cropperSection = document.getElementById('cropperSection' + index);
//     let croppedImg = document.getElementById('croppedImg' + index);


//     croppedImg.src = dataURL;
//     cropperSection.classList.remove('d-none'); 
    
//     document.getElementById('currentImg' + index).style.display = 'none';
//     input.style.display = 'none';

//     if (cropper) {
//       cropper.destroy(); 
//     }

//     cropper = new Cropper(croppedImg, {
//       aspectRatio: 1,
//       viewMode: 1,
//       background: false,
//       autoCropArea: 1,
//       zoomable: true,
//     });

    
//     document.getElementById('saveButton' + index).onclick = async function () {
//       let croppedCanvas = cropper.getCroppedCanvas();
//       let currentImg = document.getElementById('currentImg' + index);

     
//       croppedCanvas.toBlob(blob => {
//         let imgFile = new File([blob], `cropped-img-${index}.jpg`, { type: blob.type });
//         let fileList = new DataTransfer();
//         fileList.items.add(imgFile);
//         input.files = fileList.files;

       
//         currentImg.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
//         currentImg.style.display = 'block';
//         cropperSection.classList.add('d-none'); 
//       });

//       cropper.destroy();
//     };

    
//     document.getElementById('cancelButton' + index).onclick = function () {
//       cropperSection.classList.add('d-none'); 
//       document.getElementById('currentImg' + index).style.display = 'block';
//       input.style.display = 'block';

//       if (cropper) {
//         cropper.destroy(); 
//       }
//     };
//   };

//   reader.readAsDataURL(input.files[0]);
// }

let cropper;

function viewImage(event, index) {
  let input = event.target;
  let reader = new FileReader();

  reader.onload = function () {
    let dataURL = reader.result;
    let image = document.getElementById('imgView' + index);
    let previewImage = document.getElementById('preview-image' + index);
    let preview = document.getElementById('preview' + index);

    image.src = dataURL;
    preview.classList.remove('d-none'); // Show cropping section

    // Initialize or reinitialize cropper
    if (cropper) {
      cropper.destroy();
    }
    cropper = new Cropper(image, {
      aspectRatio: 4/5,
      viewMode: 4/5,
      background: false,
      autoCropArea: 4/5,
      zoomable: true,
    });

    let saveButton = document.getElementById('saveButton' + index);
    saveButton.addEventListener('click', async function () {
      let croppedCanvas = cropper.getCroppedCanvas();
      let croppedImage = document.getElementById('croppedImg' + index);
      
      croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
      previewImage.style.display = 'none';

      await croppedCanvas.toBlob(blob => {
        let imgFile = new File([blob], `cropped-img-${index}.jpg`, { type: blob.type });
        let fileList = new DataTransfer();
        fileList.items.add(imgFile);
        input.files = fileList.files;
      });

      cropper.destroy();
      // Hide cropping section after saving
    });

    let cancelButton = document.getElementById('cancelButton' + index);
    cancelButton.addEventListener('click', () => {
      previewImage.style.display = 'block';

      preview.classList.add('d-none'); // Hide cropping section
      image.src = "" // Clear the preview image
      croppedImage.src =""
    });
  };

  reader.readAsDataURL(input.files[0]);
}

// function viewImage(event, index) {
//   let input = event.target;
//   let reader = new FileReader();

//   reader.onload = function () {
//     let dataURL = reader.result;
//     let image = document.getElementById('imgView' + index);
//     let previewImage = document.getElementById('preview-image' + index);
//     let preview = document.getElementById('preview' + index);

//     image.src = dataURL;
//     preview.classList.remove('d-none'); // Show cropping section

//     // Initialize or reinitialize cropper
//     if (cropper) {
//       cropper.destroy();
//     }
//     cropper = new Cropper(image, {
//       aspectRatio: 1,
//       viewMode: 1,
//       background: false,
//       autoCropArea: 1,
//       zoomable: true,
//     });

//     let saveButton = document.getElementById('saveButton' + index);
//     saveButton.addEventListener('click', async function () {
//       let croppedCanvas = cropper.getCroppedCanvas();
//       let croppedImage = document.getElementById('croppedImg' + index);
      
//       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
//       previewImage.style.display = 'none';

//       await croppedCanvas.toBlob(blob => {
//         let imgFile = new File([blob], `cropped-img-${index}.jpg`, { type: blob.type });
//         let fileList = new DataTransfer();
//         fileList.items.add(imgFile);
//         input.files = fileList.files;
//       });

//       cropper.destroy();
//       // Hide cropping section after saving
//     });

//     let cancelButton = document.getElementById('cancelButton' + index);
//     cancelButton.addEventListener('click', () => {
//       previewImage.style.display = 'block';

//       preview.classList.add('d-none'); // Hide cropping section
//       image.src = "" // Clear the preview image
//       croppedImage.src =""
//     });
//   };

//   reader.readAsDataURL(input.files[0]);
// }



  document.getElementById("editProductForm").addEventListener("submit", function(event) {
    let isValid = true;
    
    // Product Name validation (required)
    const productName = document.getElementById("productName").value.trim();
    if (productName === "") {
      alert("Product Name is required.");
      isValid = false;
    }else{
      isValid = true
    }

    // Description validation (required, min length)
    const description = document.getElementById("description").value.trim();
    if (description.length < 10) {
      alert("Description must be at least 10 characters long.");
      isValid = false;
    }else{
      isValid = true
    }

    // Stock validation (required, positive integer)
    const stock = document.getElementById("stock").value;
    if (stock === "" || isNaN(stock) || stock <= 0) {
      alert("Stock must be a positive integer.");
      isValid = false;
    }else{
      isValid = true
    }

    // Regular Price validation (required, positive number)
    const regularPrice = document.getElementById("regularPrice").value;
    if (regularPrice === "" || isNaN(regularPrice) || regularPrice <= 0) {
      alert("Regular Price must be a positive number.");
      isValid = false;
    }else{
      isValid = true
    }

    // Sale Price validation (optional, must be lower than regular price)
    const salePrice = document.getElementById("salePrice").value;
    if (salePrice !== "" && (isNaN(salePrice) || salePrice <= 0)) {
      alert("Sale Price must be a positive number.");
      isValid = false;
    } else if (salePrice !== "" && parseFloat(salePrice) >= parseFloat(regularPrice)) {
      alert("Sale Price must be less than Regular Price.");
      isValid = false;
    }else{
      isValid = true
    }

    // Size validation (optional, alphanumeric)
    const size = document.getElementById("size").value.trim();
    if (size !== "" && !/^[a-zA-Z0-9]+$/.test(size)) {
      alert("Size must contain only alphanumeric characters.");
      isValid = false;
    }else{
      isValid = true
    }

    // Prevent form submission if validation fails
    if (!isValid) {
      event.preventDefault();
      alert('fill all')
    }
  });



  
</script>
<!-- End custom js for this page -->
</body>

</html>