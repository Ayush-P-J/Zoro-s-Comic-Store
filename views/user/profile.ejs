<!DOCTYPE html>
<html lang="en">

<head>
    <title>Single Product</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="Colo Shop Template">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="/user/styles/bootstrap4/bootstrap.min.css">
    <link href="/user/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/user/plugins/OwlCarousel2-2.2.1/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="/user/plugins/OwlCarousel2-2.2.1/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="/user/plugins/OwlCarousel2-2.2.1/animate.css">
    <link rel="stylesheet" href="/user/plugins/themify-icons/themify-icons.css">
    <link rel="stylesheet" type="text/css" href="/user/plugins/jquery-ui-1.12.1.custom/jquery-ui.css">
    <link rel="stylesheet" type="text/css" href="/user/styles/single_styles.css">
    <link rel="stylesheet" type="text/css" href="/user/styles/main_styles.css">

    <link rel="stylesheet" type="text/css" href="/user/styles/single_responsive.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.17/dist/sweetalert2.min.css">

    <style>
        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            border-radius: 5px;
        }

        .address-card {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>

    <style>
        .profile-header {
            text-align: center;
            padding: 10px;
            background-color: #f8f9fa;
        }

        .profile-header img {
            border-radius: 50%;
            width: 100px;
            height: 100px;
            margin-bottom: 10px;
        }

        .sidebar {
            min-height: 100vh;
            background-color: #f8f9fa;
            padding-top: 10px;
        }

        .sidebar .nav-link {
            color: #333;
            font-weight: bold;
        }

        .content-section {
            display: none;
        }

        .active-section {
            display: block;
        }

        .active-link {
            background-color: rgb(230, 230, 230);
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        /* .active-link:hover { */
        /* background-color: rgb(216, 216, 216); */
        /* Slightly darker gray on hover */
        /* transform: scale(1.05); */
        /* Slightly enlarges the element */
        /* } */
    </style>
    <style>
        .order-details-container {
            display: grid;
            grid-template-columns: 1fr;
            grid-gap: 24px;
        }

        .order-item {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            padding: 24px;
            display: grid;
            grid-template-columns: 100px 1fr;
            grid-gap: 24px;
        }

        .product-image img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 4px;
        }

        .product-name {
            font-weight: 600;
            font-size: 16px;
            margin-bottom: 4px;
        }

        .product-price {
            font-weight: 600;
            font-size: 16px;
        }

        .delivery-date {
            color: #666;
            font-size: 14px;
        }

        .review-link a {
            color: #4285F4;
            font-size: 14px;
            text-decoration: underline;
        }
    </style>

    <style>
        .status-badge {
            padding: 8px 12px;
            border-radius: 8px;
            font-weight: 500;
            display: inline-block;
        }

        .status-order-placed {
            background-color: #e3f2fd;
            color: #1565c0;
        }

        .status-processing {
            background-color: #fff3e0;
            color: #e65100;
        }

        .status-shipped {
            background-color: #f3e5f5;
            color: #7b1fa2;
        }

        .status-out-for-delivery {
            background-color: #e8eaf6;
            color: #303f9f;
        }

        .status-delivered {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .status-cancelled {
            background-color: #ffebee;
            color: #c62828;
        }

        .status-returned {
            background-color: #fbe9e7;
            color: #d84315;
        }
    </style>


</head>

<body>

    <div class="super_container">

        <!-- Header -->

        <header class="header trans_300">

            <!-- Top Navigation -->



            <!-- Main Navigation -->

            <div class="main_nav_container">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-12 text-right">
                            <div class="logo_container">
                                <a href="#">ZORO<span>'S</span></a>
                            </div>
                            <nav class="navbar">
                                <ul class="navbar_menu">
                                    <li><a href="index.html">home</a></li>
                                    <li><a href="#">shop</a></li>
                                    <li><a href="#">promotion</a></li>
                                    <li><a href="#">pages</a></li>
                                    <li><a href="#">blog</a></li>
                                    <li><a href="contact.html">contact</a></li>
                                </ul>
                                <ul class="navbar_user">
                                    <li><a href="#"><i class="fa fa-search" aria-hidden="true"></i></a></li>
                                    <li><a href="#"><i class="fa fa-user" aria-hidden="true"></i></a></li>
                                    <li class="checkout">
                                        <a href="/user/cart">
                                            <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                                            <span id="checkout_items" class="checkout_items">2</span>
                                        </a>
                                    </li>
                                </ul>
                                <div class="hamburger_container">
                                    <i class="fa fa-bars" aria-hidden="true"></i>
                                </div>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>

        </header>

        <div class="fs_menu_overlay"></div>

        <!-- Hamburger Menu -->

        <div class="hamburger_menu">
            <div class="hamburger_close"><i class="fa fa-times" aria-hidden="true"></i></div>
            <div class="hamburger_menu_content text-right">
                <ul class="menu_top_nav">
                    <li class="menu_item has-children">
                        <a href="#">
                            usd
                            <i class="fa fa-angle-down"></i>
                        </a>
                        <ul class="menu_selection">
                            <li><a href="#">cad</a></li>
                            <li><a href="#">aud</a></li>
                            <li><a href="#">eur</a></li>
                            <li><a href="#">gbp</a></li>
                        </ul>
                    </li>
                    <li class="menu_item has-children">
                        <a href="#">
                            English
                            <i class="fa fa-angle-down"></i>
                        </a>
                        <ul class="menu_selection">
                            <li><a href="#">French</a></li>
                            <li><a href="#">Italian</a></li>
                            <li><a href="#">German</a></li>
                            <li><a href="#">Spanish</a></li>
                        </ul>
                    </li>
                    <li class="menu_item has-children">
                        <a href="#">
                            My Account
                            <i class="fa fa-angle-down"></i>
                        </a>
                        <ul class="menu_selection">
                            <li><a href="#"><i class="fa fa-sign-in" aria-hidden="true"></i>Sign In</a></li>
                            <li><a href="#"><i class="fa fa-user-plus" aria-hidden="true"></i>Register</a></li>
                        </ul>
                    </li>
                    <li class="menu_item"><a href="#">home</a></li>
                    <li class="menu_item"><a href="#">shop</a></li>
                    <li class="menu_item"><a href="#">promotion</a></li>
                    <li class="menu_item"><a href="#">pages</a></li>
                    <li class="menu_item"><a href="#">blog</a></li>
                    <li class="menu_item"><a href="#">contact</a></li>
                </ul>
            </div>
        </div>

        <div class="container single_product_container">
            <div class="row">
                <div class="col">

                    <!-- Breadcrumbs -->

                    <div class="breadcrumbs d-flex flex-row align-items-center " style="padding: 0px; margin: 0px;">
                        <ul>
                            <li><a href="/user/home">Home</a></li>
                            <li class="active"><a href="#"><i class="fa fa-angle-right"
                                        aria-hidden="true"></i>Profile</a></li>
                        </ul>
                    </div>

                </div>
            </div>

            <div class="row">
                <!-- Sidebar -->
                <div class="col-md-3 col-lg-2 ">
                    <div class="profile-header">
                        <img src="https://via.placeholder.com/100" alt="Profile Picture">
                        <div class="username">
                            <%= userData.fullName %>
                        </div>
                        <% const formattedDate=new Intl.DateTimeFormat('en-US', { year: 'numeric' , month: 'long'
                            }).format(userData.createdAt); %>
                            <small class="text-muted">
                                <%= formattedDate %>
                            </small>
                    </div>

                    <ul class="nav flex-column mt-4">
                        <li class="nav-item">
                            <h3>Settings</h3>
                            <ul>
                                <li>
                                    <a class="nav-link active-link " onclick="showSection('editProfile')">
                                        Edit Profile
                                    </a>
                                </li>
                                <li>
                                    <a class="nav-link" onclick="showSection('address')">
                                        Address
                                    </a>
                                </li>
                                <li>
                                    <a class="nav-link" onclick="showSection('orders')">
                                        Orders
                                    </a>
                                </li>
                                <li>
                                    <a class="nav-link " onclick="logout()" style="cursor: pointer;">
                                        <i  class="fa fa-sign-out btn-danger" aria-hidden="true"></i>
                                        <span style="color: red;" >Logout</span>
                                    </a>
                                </li>

                            </ul>
                        </li>
                        <!-- <li class="nav-item">
                            <a class="nav-link active" href="" onclick="showSection('overview')">Overview</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="" onclick="showSection('orders')">Orders</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="" onclick="showSection('wishlist')">Wishlist</a>
                        </li> -->
                    </ul>
                </div>

                <!-- Main Content -->
                <div class="col-md-9 col-lg-10">
                    <div id="editProfile" class="content-section active-section mt-4">
                        <h5>Account Settings</h5>
                        <div class="container mt-5">
                            <h2 class="mb-4">Profile</h2>

                            <form id="profileForm">
                                <!-- Full Name -->
                                <div class="form-group">
                                    <label for="fullName">Full Name</label>
                                    <input type="text" class="form-control" id="fullName" name="fullName"
                                        value="<%= userData.fullName %>" disabled>
                                    <small id="error-fullName" class="text-danger"></small>

                                </div>
                                <div class="form-group">
                                    <label for="userName">User Name</label>
                                    <input type="text" class="form-control" id="userName" name="userName"
                                        value="<%= userData.userName %>" required disabled>
                                    <small id="error-userName" class="text-danger"></small>

                                </div>



                                <!-- Phone Number -->
                                <div class="form-group">
                                    <label for="phoneNumber">Phone Number</label>
                                    <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber"
                                        value="<%= userData.phone %>" required disabled>
                                    <small id="error-phone" class="text-danger"></small>

                                </div>

                                <!-- Save and Cancel Buttons -->
                                <button type="submit" id="saveButton" class="btn btn-primary"
                                    style="display: none;">Save Changes</button>
                                <button type="button" id="cancelButton" class="btn btn-secondary" style="display: none;"
                                    onclick="toggleEdit(false)">Cancel</button>
                            </form>

                            <!-- Edit Button -->
                            <button type="button" id="editButton" class="btn btn-warning mt-3"
                                onclick="toggleEdit(true)">Edit</button>

                        </div>
                    </div>

                    <!-- address  -->

                    <!-- Edit Address Modal -->
                    <div class="modal" id="editAddressModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Edit Address</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="editAddressForm">
                                        <input type="hidden" id="addressId" name="addressId">

                                        <div class="mb-3">
                                            <label for="recipientName" class="form-label">Recipient Name</label>
                                            <input type="text" class="form-control" id="editRecipientName"
                                                name="recipientName" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="phoneNumber" class="form-label">Phone Number</label>
                                            <input type="tel" class="form-control" id="editPhoneNumber"
                                                name="phoneNumber" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="addressLine" class="form-label">Address Line</label>
                                            <input type="text" class="form-control" id="editAddressLine"
                                                name="addressLine" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="landmark" class="form-label">Landmark</label>
                                            <input type="text" class="form-control" id="editLandmark" name="landmark">
                                        </div>
                                        <div class="mb-3">
                                            <label for="city" class="form-label">City</label>
                                            <input type="text" class="form-control" id="editCity" name="city" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="state" class="form-label">State</label>
                                            <input type="text" class="form-control" id="editState" name="state"
                                                required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="pinCode" class="form-label">Pin Code</label>
                                            <input type="text" class="form-control" id="editPinCode" name="pinCode"
                                                required>
                                        </div>
                                        <div class="mb-3 form-check">
                                            <input type="checkbox" class="form-check-input" id="editIsDefault"
                                                name="isDefault">
                                            <label for="isDefault" class="form-check-label">Set as Default
                                                Address</label>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary" onclick="saveAddress()">Save
                                        Changes</button>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id="address" class="content-section  mt-4">


                        <button type="button" id="addAddressBtn" class="nav-link btn btn-primary"
                            onclick="addAddressFrom('open')">Add Address</button>
                        <div>
                            <!-- Add Address Button -->
                            <section id="addressSection" style="display: none;" class="">
                                <div class="container">
                                    <h2>Add Address</h2>
                                    <form id="addressForm" action="/user/addAddress/profile" method="POST">
                                        <!-- Recipient Name -->
                                        <div class="form-group">
                                            <label for="recipientName">Recipient Name</label>
                                            <input type="text" class="form-control" id="recipientName"
                                                name="recipientName" required>
                                        </div>
                                        <!-- Phone Number -->
                                        <div class="form-group">
                                            <label for="phoneNumber">Phone Number</label>
                                            <input type="tel" class="form-control" id="phone" name="phoneNumber"
                                                required>
                                        </div>
                                        <!-- Address Line 1 -->
                                        <div class="form-group">
                                            <label for="addressLine1">Address Line</label>
                                            <input type="text" class="form-control" id="addressLine" name="addressLine"
                                                required>
                                        </div>
                                        <!-- Landmark (Optional) -->
                                        <div class="form-group">
                                            <label for="landmark">Landmark</label>
                                            <input type="text" class="form-control" id="landmark" name="landmark">
                                        </div>
                                        <!-- City -->
                                        <div class="form-group">
                                            <label for="city">City</label>
                                            <input type="text" class="form-control" id="city" name="city" required>
                                        </div>
                                        <!-- State -->
                                        <div class="form-group">
                                            <label for="state">State</label>
                                            <input type="text" class="form-control" id="state" name="state" required>
                                        </div>
                                        <!-- Pin Code -->
                                        <div class="form-group">
                                            <label for="pinCode">Pin Code</label>
                                            <input type="text" class="form-control" id="pinCode" name="pinCode"
                                                required>
                                        </div>
                                        <!-- Country -->
                                        <div class="form-group">
                                            <label for="country">Country</label>
                                            <input type="text" class="form-control" id="country" name="country"
                                                value="India" readonly>
                                        </div>
                                        <!-- Set as Default Address -->
                                        <div class="form-group">
                                            <label>
                                                <input type="checkbox" id="isDefault" name="isDefault">
                                                Set as Default Address
                                            </label>
                                        </div>
                                        <!-- Submit Button -->
                                        <button type="submit" class="btn btn-success">Save Address</button>
                                        <button id="cancelBtn" onclick="addAddressFrom('close')"
                                            class="btn btn-success">Cancel</button>
                                    </form>
                                </div>
                            </section>

                            <!-- Display Address List -->
                            <div id="addressList">
                                <% userData.addresses.forEach((address, index)=> { %>
                                    <div class="address-card" id="addressCard<%= index %>">
                                        <h3>Address <%= index + 1 %>
                                        </h3>
                                        <p><strong>Recipient Name:</strong>
                                            <%= address.recipientName %>
                                        </p>
                                        <p><strong>Phone Number:</strong>
                                            <%= address.phoneNumber %>
                                        </p>
                                        <p><strong>Address Line 1:</strong>
                                            <%= address.addressLine %>
                                        </p>
                                        <p><strong>Landmark:</strong>
                                            <%= address.landmark %>
                                        </p>
                                        <p><strong>City:</strong>
                                            <%= address.city %>
                                        </p>
                                        <p><strong>State:</strong>
                                            <%= address.state %>
                                        </p>
                                        <p><strong>Pin Code:</strong>
                                            <%= address.pinCode %>
                                        </p>
                                        <p><strong>Country:</strong> India</p>
                                        <p><strong>Default Address:</strong>
                                            <%= address.isDefault ? 'Yes' : 'No' %>
                                        </p>
                                        <button type="button" class="btn btn-primary"
                                            onclick="showEditForm('<%= index %>', '<%= JSON.stringify(address) %>')">Edit
                                            Address</button>
                                        <button type="button" class="btn btn-danger"
                                            onclick="showAlert('<%= address._id %>')">Delete Address</button>
                                    </div>
                                    <hr>
                                    <% }); %>
                            </div>
                        </div>




                    </div>
                    <div id="overview" class="content-section  mt-4">
                        <h5>Recent Orders</h5>
                        <p>See your recent orders and track their statuses.</p>
                        <!-- Add recent order items here -->
                    </div>

                    <div id="orders" class="content-section mt-4">
                        <div class="order-details-container">
                            <% orderDetails.forEach((order)=>{ %>
                                <div class="order-item d-flex justify-content-evenly">
                                    <!-- <div class="product-image">
                                      <img src="" alt="Product Image">
                                    </div> -->
                                    <div class="product-info ">
                                        <p class="product-name">
                                            <%= order.orderId %>
                                        </p>
                                        <p class="product-price">&dollar;<%= order.totalAmount %>
                                        </p>
                                        <% const formattedDate=new Intl.DateTimeFormat('en-US', { year: 'numeric' ,
                                            month: 'long' , day: "numeric" , }).format(order.createdAt); %>
                                            <% if (order.status=="Delivered" ){ %>
                                                <p class="delivery-date">Delivered on <%= formattedDate %>
                                                </p>
                                                <% } else{ %>

                                                    <p class="delivery-date">Ordered on <%= formattedDate %>
                                                    </p>

                                                    <% } %>
                                                        <!-- <div class="review-link">
                                        <a href="#">Rate & Review Product</a>
                                      </div> -->
                                    </div>
                                    <% const getStatusClass=(status)=> {
                                        switch(status) {
                                        case 'Order Placed':
                                        return 'status-order-placed';
                                        case 'Processing':
                                        return 'status-processing';
                                        case 'Shipped':
                                        return 'status-shipped';
                                        case 'Out for delivery':
                                        return 'status-out-for-delivery';
                                        case 'Delivered':
                                        return 'status-delivered';
                                        case 'Cancelled':
                                        return 'status-cancelled';
                                        case 'Returned':
                                        return 'status-returned';
                                        default:
                                        return '';
                                        }
                                        }
                                        %>
                                        <div>
                                            <p class="status-badge <%= getStatusClass(order.status) %>">
                                                <%= order.status %>
                                            </p>

                                        </div>
                                        <div>
                                            <% if(order.status=="Order Placed" ){%>
                                                <button type="button" onclick="orderCancel('<%= order.orderId %>')"
                                                    class="btn btn-danger">Cancel</button>

                                                <% }else{ %>
                                                    <button type="button" onclick="orderCancel('<%= order.orderId %>')"
                                                        class="btn btn-dark" disabled>Cancel</button>
                                                    <% } %>
                                        </div>
                                </div>


                                <% }) %>



                        </div>


                    </div>

                    <div id="wishlist" class="content-section mt-4">
                        <h5>Wishlist</h5>
                        <p>Items you’ve added to your wishlist.</p>
                        <!-- Add wishlist items here -->
                    </div>


                </div>
            </div>


        </div>

        <!-- Tabs -->




        <!-- Benefit -->



        <!-- Newsletter -->



        <!-- Footer -->

        <footer class="footer">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <div
                            class="footer_nav_container d-flex flex-sm-row flex-column align-items-center justify-content-lg-start justify-content-center text-center">
                            <ul class="footer_nav">
                                <li><a href="#">Blog</a></li>
                                <li><a href="#">FAQs</a></li>
                                <li><a href="contact.html">Contact us</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div
                            class="footer_social d-flex flex-row align-items-center justify-content-lg-end justify-content-center">
                            <ul>
                                <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-skype" aria-hidden="true"></i></a></li>
                                <li><a href="#"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="footer_nav_container">
                            <div class="cr">©2018 All Rights Reserverd. This template is made with <i
                                    class="fa fa-heart-o" aria-hidden="true"></i> by <a href="#">Colorlib</a> &amp;
                                distributed by <a href="https://themewagon.com">ThemeWagon</a></div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>

    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


    <script>
        function showSection(section) {
            // Hide all sections
            document.querySelectorAll('.content-section').forEach(el => el.classList.remove('active-section'));
            // Show the selected section
            document.getElementById(section).classList.add('active-section');
            // Update active link
            document.querySelectorAll('.nav-link').forEach(el => el.classList.remove('active-link'));
            event.currentTarget.classList.add('active-link')
        }



        function toggleEdit(editMode) {
            const form = document.getElementById('profileForm');
            const saveButton = document.getElementById('saveButton');
            const cancelButton = document.getElementById('cancelButton');
            const editButton = document.getElementById('editButton');

            // Enable or disable form fields based on editMode
            Array.from(form.elements).forEach(element => {
                if (element.tagName !== "BUTTON") element.disabled = !editMode;
            });

            // Toggle visibility of buttons
            saveButton.style.display = editMode ? 'inline-block' : 'none';
            cancelButton.style.display = editMode ? 'inline-block' : 'none';
            editButton.style.display = editMode ? 'none' : 'inline-block';
        }


        function addAddressFrom(btn) {
            let form = document.getElementById('addressSection');

            if (btn === 'open') {
                form.style.display = "block"
            } else {
                form.style.display = "none"
            }
        }

        function setDeleteUrl(url) {
            document.getElementById('confirmDeleteButton').setAttribute('href', url);
        }
        function showAlert(id) {

            Swal.fire({
                title: 'Are you sure?',
                text: `You want to delete this address?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#d33',
                confirmButtonText: `Yes, delete it!`
            }).then((result) => {
                if (result.isConfirmed) {
                    // Redirect to the action URL
                    window.location.href = `/user/address/profile/delete/${id}`;
                }
            });
        }

        function showEditForm(index, address) {
            const parsedAddress = JSON.parse(address);

            // Populate form fields with address data
            document.getElementById('addressId').value = parsedAddress._id;
            document.getElementById('editRecipientName').value = parsedAddress.recipientName;
            document.getElementById('editPhoneNumber').value = parsedAddress.phoneNumber;
            document.getElementById('editAddressLine').value = parsedAddress.addressLine;
            document.getElementById('editLandmark').value = parsedAddress.landmark;
            document.getElementById('editCity').value = parsedAddress.city;
            document.getElementById('editState').value = parsedAddress.state;
            document.getElementById('editPinCode').value = parsedAddress.pinCode;
            document.getElementById('editIsDefault').checked = parsedAddress.isDefault;

            // Show the modal
            const editAddressModal = new bootstrap.Modal(document.getElementById('editAddressModal'));
            editAddressModal.show();
        }



        async function saveAddress() {
            const addressId = document.getElementById('addressId').value;
            const updatedAddress = {
                recipientName: document.getElementById('editRecipientName').value,
                phoneNumber: document.getElementById('editPhoneNumber').value,
                addressLine: document.getElementById('editAddressLine').value,
                landmark: document.getElementById('editLandmark').value,
                city: document.getElementById('editCity').value,
                state: document.getElementById('editState').value,
                pinCode: document.getElementById('editPinCode').value,
                isDefault: document.getElementById('editIsDefault').checked
            };

            try {
                const response = await axios.post(`/user/address/edit/${addressId}`, updatedAddress);
                if (response.status === 200) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Your address has been updated successfully.',
                        icon: 'success',
                        showCancelButton: false,
                        showConfirmButton: false, // Hide confirm button
                        timer: 2000 // Close after 3 seconds
                    }).then(() => {
                        window.location.reload();
                    });
                }
            } catch (error) {
                console.error(error);
                alert('Failed to update address');
            }
        }

    </script>

    <script>
        document.getElementById('profileForm').addEventListener('submit', async function (e) {
            e.preventDefault(); // Prevent the form's default submission behavior

            // Define form fields and error message elements
            const fullName = document.getElementById('fullName');
            const userName = document.getElementById('userName');
            const phoneNumber = document.getElementById('phoneNumber');
            const errorFullName = document.getElementById('error-fullName');
            const errorUserName = document.getElementById('error-userName');
            const errorPhone = document.getElementById('error-phone');

            let valid = true;
            const phoneRegex = /^\d{10}$/; // Define regex for a 10-digit phone number

            // Clear previous error messages
            errorFullName.innerText = "";
            errorUserName.innerText = "";
            errorPhone.innerText = "";

            // Full Name Validation
            if (fullName.value.trim() === '') {
                errorFullName.innerText = "Please enter your full name.";
                valid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(fullName.value.trim())) {
                errorFullName.innerText = "Full name should not contain special characters.";
                valid = false;
            }

            // Username Validation
            if (userName.value.trim() === '') {
                errorUserName.innerText = "Please enter a username.";
                valid = false;
            }

            // Phone Number Validation
            if (phoneNumber.value.trim() === '') {
                errorPhone.innerText = "Please enter your phone number.";
                valid = false;
            } else if (!phoneRegex.test(phoneNumber.value.trim())) {
                errorPhone.innerText = "Please enter a valid 10-digit phone number.";
                valid = false;
            }

            // Prevent Axios request if validation fails
            if (!valid) {
                alert("Please fix the errors in the form.");
                return;
            }

            // Proceed with the Axios request if validation passes
            try {
                const response = await axios.post('/user/profile', {
                    fullName: fullName.value.trim(),
                    userName: userName.value.trim(),
                    phoneNumber: phoneNumber.value.trim()
                });

                // Check if the response is successful
                if (response.status === 200) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Your profile has been updated successfully.',
                        icon: 'success',
                        showCancelButton: false,
                        showConfirmButton: false, // Hide confirm button
                        timer: 2000 // Close after 3 seconds
                    }).then(() => {
                        window.location.href = '/user/profile'; // Reload profile page after the alert disappears
                    });
                }

            } catch (error) {
                // Handle error response
                Swal.fire({
                    title: 'Failed',
                    text: 'Failed to update profile.',
                    icon: 'error',
                    showCancelButton: false,
                    showConfirmButton: false,
                    timer: 2000
                })
                // const errorMessage = error.response ? error.response.data.message : '';
                // errorFullName.textContent = errorMessage;
            }
        });

        async function orderCancel(orderId) {
            // Display confirmation dialog
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "Do you really want to cancel this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            });

            // Proceed if confirmed
            if (result.isConfirmed) {
                try {
                    await axios.post(`/user/orderCancel`, {
                        orderId: orderId,
                    });

                    // Show success message
                    Swal.fire(
                        'Cancelled!',
                        'Your order has been successfully cancelled.',
                        'success'
                    ).then(() => window.location.reload());
                } catch (error) {
                    Swal.fire(
                        'Error!',
                        'There was an issue cancelling your order. Please try again.',
                        'error'
                    );
                }
            } else {
                // Optional: Show a message if the user decides not to cancel
                Swal.fire(
                    'Cancelled',
                    'Your order remains active.',
                    'info'
                );
            }
        }

        function logout(){
           const result = Swal.fire({
                        title: 'Warning',
                        text: 'Do you want to logout',
                        icon: 'warning',
                        showCancelButton: true,
                        showConfirmButton: true, // Hide confirm button
                    })

                    if (result.isConfirmed) {
                        window.location.href = "/user/logout"
                    }
                }

    </script>

   








    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



    <script src="/user/js/jquery-3.2.1.min.js"></script>
    <script src="/user/styles/bootstrap4/popper.js"></script>
    <script src="/user/styles/bootstrap4/bootstrap.min.js"></script>
    <script src="/user/plugins/Isotope/isotope.pkgd.min.js"></script>
    <script src="/user/plugins/OwlCarousel2-2.2.1/owl.carousel.js"></script>
    <script src="/user/plugins/easing/easing.js"></script>
    <script src="/user/plugins/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script src="/user/js/single_custom.js"></script>
    <script src='/user/plugins/zoom/jquery.zoom.min.js' type="text/javascript"></script><!-- product zoom -->


</body>

</html>